{"version":3,"sources":["components/WebGL/Assets.js","components/Landing/index.js","components/ProjectPage/index.js","components/TextButton/index.js","components/Team/index.js","components/WebGL/Settings.js","components/WebGL/Config.js","components/WebGL/assets-list.js","components/WebGL/preload.js","components/WebGL/DrawSave.js","components/WebGL/shaders/save.vert.js","components/WebGL/shaders/save.frag.js","components/WebGL/shaders/trails.vert.js","components/WebGL/shaders/fragments/rotate.glsl.js","components/WebGL/shaders/fragments/align.glsl.js","components/WebGL/shaders/trails.frag.js","components/WebGL/shaders/fragments/diffuse.glsl.js","components/WebGL/DrawTrails.js","components/WebGL/shaders/sim.frag.js","components/WebGL/shaders/fragments/curlNoise.glsl.js","components/WebGL/Scene.js","components/WebGL/index.js","App.js","serviceWorker.js","index.js"],"names":["assets","Landing","currentPage","this","props","className","Component","ProjectPage","name","selected","desc","TextButton","text","onClick","visible","Team","display","numParticles","dirX","dirY","dirZ","noise","seed","id","url","type","Assets","_assets","init","mAssets","assetsToLoad","map","o","texture","ext","mFile","ary","split","length","getExtension","file","find","a","GLTexture","console","debug","table","get","mId","initAssets","Promise","resolve","reject","log","preload","document","body","classList","add","AssetsLoader","on","error","p","loader","querySelector","style","width","start","then","catch","e","DrawSave","num","Config","positions","uvs","indices","normals","index","i","j","push","random","Math","mesh","alfrid","Mesh","GL","POINTS","bufferVertex","bufferTexCoord","bufferNormal","bufferIndex","useProgram","setMesh","Draw","DrawTrails","count","posOffsets","bufferInstance","vs","fs","uniform","Scene","canvas","createElement","alpha","enableAlphaBlending","enable","DEPTH_TEST","camera","CameraPerspective","setPerspective","PI","aspectRatio","orbitalControl","OrbitalControl","window","rx","value","radius","limit","lockRotation","control","lockZoom","_index","_nextIndex","mtx","mat4","create","mtxTranslate","translate","_offset","TweenNumber","_init","_initTextures","_initViews","Scheduler","addEF","render","mIndex","close","oSetting","Settings","_texture","regenerate","open","setTo","ry","speed","oSettings","FLOAT","minFilter","NEAREST","magFilter","_fbo","FboArray","_bAxis","BatchAxis","_bCopy","BatchCopy","_drawSave","bindFrameBuffer","read","setClearColor","draw","_drawSim","Geom","bigTriangle","ShaderLibs","bigTriangleVert","fsSim","_drawTrails","mSettings","updatePos","write","uniformTexture","getTexture","swap","goto","lookAt","position","mul","update","viewport","height","clear","setMatrices","rotate","t","all","w","h","setSize","setAspectRatio","WebGL","ref","React","createRef","nextProps","nextState","scene","show","current","appendChild","addEventListener","resize","innerWidth","innerHeight","App","state","showTeamPage","keyCode","nextPage","setState","prev","next","toggleTeam","ProjectPagesData","key","Boolean","location","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.2d92c448.chunk.js","sourcesContent":["// Assets.js\n\nimport assetsToLoad from \"./assets-list\";\nimport { GLTexture } from \"alfrid\";\n\nconst Assets = {};\nlet _assets = [];\nlet assets;\n\nconst getAsset = function (id) {\n  return assets.find((a) => a.id === id).file;\n};\n\nconst getExtension = function (mFile) {\n  const ary = mFile.split(\".\");\n  return ary[ary.length - 1];\n};\n\nAssets.init = function (mAssets) {\n  assets = mAssets;\n  let hdrCubemaps = {};\n  _assets = assetsToLoad.map((o) => {\n    const ext = getExtension(o.url);\n    const file = getAsset(o.id);\n    let texture;\n\n    switch (ext) {\n      case \"jpg\":\n      case \"png\":\n        texture = new GLTexture(file);\n        return {\n          id: o.id,\n          file: texture,\n        };\n        break;\n    }\n  });\n\n  if (_assets.length > 0) {\n    console.debug(\"ASSETS:\");\n    console.table(_assets);\n  }\n};\n\nAssets.get = function (mId) {\n  return _assets.find((a) => {\n    return a.id === mId;\n  }).file;\n};\n\nexport default Assets;\n","import React, { Component } from \"react\";\nimport \"./style.scss\";\n\nclass Landing extends Component {\n  render() {\n    const { currentPage } = this.props;\n    const className = `landing ${currentPage === 0 ? \"show\" : \"\"}`;\n    return <div className={className}></div>;\n  }\n}\n\nexport default Landing;\n","import React, { Component } from \"react\";\nimport \"./style.css\";\n\nclass ProjectPage extends Component {\n  render() {\n    const { name, selected, desc } = this.props;\n    const className = selected ? \"ProjectWrapper show\" : \"ProjectWrapper\";\n    return (\n      <div className={className}>\n        <div className=\"LeftContainer TextContainer\">\n          <h2>{name}</h2>\n        </div>\n        <div className=\"RightContainer TextContainer\">\n          <p>{desc}</p>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ProjectPage;\n","import React from \"react\";\nimport \"./style.scss\";\n\nconst TextButton = ({ text, onClick, visible }) => {\n  return (\n    <div className={`TextButton ${visible ? \"\" : \"hide\"}`} onClick={onClick}>\n      {text}\n    </div>\n  );\n};\n\nexport default TextButton;\n","import React from \"react\";\nimport \"./style.scss\";\n\nconst Team = ({ display }) => {\n  return (\n    <div className={display ? \"TeamWrapper show\" : \"TeamWrapper\"}>\n      <h1 className=\"team-title\">Team Page</h1>\n    </div>\n  );\n};\n\nexport default Team;\n","export default [\n  {\n    numParticles: 32,\n    dirX: 0.3436557961085227,\n    dirY: 0.5,\n    dirZ: 0.1331871745683748,\n    noise: 1.7051246916963554,\n    seed: 82,\n  },\n  {\n    numParticles: 33,\n    dirX: 0,\n    dirY: 0.4351877226637435,\n    dirZ: 0,\n    noise: 0.8895587832282819,\n    seed: 389,\n  },\n  {\n    numParticles: 25,\n    dirX: 0,\n    dirY: 0.5,\n    dirZ: -0.04220334338174836,\n    noise: 0.8369416278432447,\n    seed: 394,\n  },\n  {\n    numParticles: 44,\n    dirX: -0.07728144697177308,\n    dirY: 0.5,\n    dirZ: 0,\n    noise: 0.8106330501507262,\n    seed: 1,\n  },\n  {\n    numParticles: 35,\n    dirX: 0,\n    dirY: 0.1721019457385585,\n    dirZ: 0,\n    noise: 1.44203891477117,\n    seed: 113,\n  },\n  {\n    numParticles: 32,\n    dirX: 0,\n    dirY: 0.6105782406138668,\n    dirZ: 0,\n    noise: 1.5735818032337627,\n    seed: 337,\n  },\n];\n","// Config.js\n\nexport default {\n  numParticles: 32,\n};\n","export default [\n  { id: \"Project_01\", url: \"assets/img/Project_01.png\", type: \"png\" },\n  { id: \"Project_02\", url: \"assets/img/Project_02.png\", type: \"png\" },\n  { id: \"Project_03\", url: \"assets/img/Project_03.png\", type: \"png\" },\n  { id: \"Project_04\", url: \"assets/img/Project_04.png\", type: \"png\" },\n  { id: \"Project_05\", url: \"assets/img/Project_05.png\", type: \"png\" },\n  { id: \"Project_06\", url: \"assets/img/Project_06.png\", type: \"png\" },\n];\n","import assets from \"./assets-list\";\nimport Assets from \"./Assets\";\nimport AssetsLoader from \"assets-loader\";\n\nconst loadAssets = () =>\n  new Promise((resolve, reject) => {\n    console.log(\"Load Assets\");\n    if (assets.length > 0) {\n      document.body.classList.add(\"isLoading\");\n\n      new AssetsLoader({\n        assets: assets,\n      })\n        .on(\"error\", (error) => {\n          console.log(\"Error :\", error);\n        })\n        .on(\"progress\", (p) => {\n          // console.log('Progress : ', p);\n          const loader = document.body.querySelector(\".Loading-Bar\");\n          if (loader) loader.style.width = `${p * 100}%`;\n        })\n        .on(\"complete\", (o) => {\n          resolve(o);\n        })\n        .start();\n    } else {\n      resolve([]);\n    }\n  });\n\nconst initAssets = (mAssets) =>\n  new Promise((resolve, reject) => {\n    console.log(\"Init Assets\", mAssets);\n    // INIT ASSETS\n    Assets.init(mAssets);\n\n    resolve();\n  });\n\nconst preload = () =>\n  new Promise((resolve, reject) => {\n    loadAssets()\n      .then(initAssets)\n      .then(() => {\n        resolve();\n      })\n      .catch((e) => {\n        console.log(\"Error\", e);\n      });\n  });\n\nexport default preload;\n","import alfrid, { GL } from \"alfrid\";\n\nimport Config from \"./Config\";\nimport { random } from \"randomutils\";\nimport vs from \"./shaders/save.vert\";\nimport fs from \"./shaders/save.frag\";\n\nclass DrawSave extends alfrid.Draw {\n  constructor() {\n    super();\n\n    const { numParticles: num } = Config;\n\n    const positions = [];\n    const uvs = [];\n    const indices = [];\n    const normals = [];\n    let index = 0;\n\n    const getPos = () => {\n      return [random(-1, 1), 0, random(-1, 1)];\n    };\n\n    for (let i = 0; i < num; i++) {\n      for (let j = 0; j < num; j++) {\n        positions.push(getPos());\n        uvs.push([(i / num) * 2 - 1, (j / num) * 2 - 1]);\n        normals.push([Math.random(), Math.random(), Math.random()]);\n        indices.push(index);\n        index++;\n      }\n    }\n    const mesh = new alfrid.Mesh(GL.POINTS);\n    mesh.bufferVertex(positions);\n    mesh.bufferTexCoord(uvs);\n    mesh.bufferNormal(normals);\n    mesh.bufferIndex(indices);\n\n    this.useProgram(vs, fs).setMesh(mesh);\n  }\n}\n\nexport default DrawSave;\n","export default `\nprecision highp float;\nattribute vec3 aVertexPosition;\nattribute vec2 aTextureCoord;\nattribute vec3 aNormal;\n\nvarying vec3 vColor;\nvarying vec3 vExtra;\n\nvoid main(void) {\n    gl_Position = vec4(aTextureCoord, 0.0, 1.0);\n    vColor = aVertexPosition;\n    vExtra = aNormal;;\n}\n`;\n","export default `\n#extension GL_EXT_draw_buffers : require \n\nprecision highp float;\nvarying vec3 vColor;\nvarying vec3 vExtra;\n\nvoid main(void) {\n    gl_FragData[0] = vec4(vColor, 1.0);\n    gl_FragData[1] = vec4(0.0, 0.0, 0.0, 1.0);\n    gl_FragData[2] = vec4(vExtra, 1.0);\n}\n`;\n","import rotate from \"./fragments/rotate.glsl\";\nimport align from \"./fragments/align.glsl\";\n\nexport default `\nprecision highp float;\nattribute vec3 aVertexPosition;\nattribute vec2 aTextureCoord;\nattribute vec3 aNormal;\nattribute vec4 aPosOffset;\n\nuniform mat4 uModelMatrix;\nuniform mat4 uViewMatrix;\nuniform mat4 uProjectionMatrix;\nuniform float uRadius;\nuniform float uSetPercent;\nuniform float uNumSets;\nuniform float uOffset;\n\nuniform sampler2D texture0;\nuniform sampler2D texture1;\nuniform sampler2D texture2;\nuniform sampler2D texture3;\nuniform sampler2D texture4;\nuniform sampler2D texture5;\nuniform sampler2D texture6;\nuniform sampler2D texture7;\nuniform sampler2D texture8;\nuniform sampler2D texture9;\nuniform sampler2D texture10;\nuniform sampler2D texture11;\nuniform sampler2D texture12;\nuniform sampler2D texture13;\nuniform sampler2D texture14;\n\nvarying vec2 vTextureCoord;\nvarying vec3 vNormal;\nvarying vec3 vNormalOrg;\nvarying vec4 vExtra;\nvarying vec3 vPosition;\nvarying float vDebug;\n\n#define PI 3.141592653\n\nvec3 getPos(float index, vec2 uv) {\n  vec3 pos = vec3(0.0);\n  if(index < 0.5) {\n    pos = texture2D(texture0, uv).xyz;\n  } else if(index < 1.5) {\n    pos = texture2D(texture1, uv).xyz;\n  } else if(index < 2.5) {\n    pos = texture2D(texture2, uv).xyz;\n  } else if(index < 3.5) {\n    pos = texture2D(texture3, uv).xyz;\n  } else if(index < 4.5) {\n    pos = texture2D(texture4, uv).xyz;\n  } else if(index < 5.5) {\n    pos = texture2D(texture5, uv).xyz;\n  } else if(index < 6.5) {\n    pos = texture2D(texture6, uv).xyz;\n  } else if(index < 7.5) {\n    pos = texture2D(texture7, uv).xyz;\n  } else if(index < 8.5) {\n    pos = texture2D(texture8, uv).xyz;\n  } else if(index < 9.5) {\n    pos = texture2D(texture9, uv).xyz;\n  } else if(index < 10.5) {\n    pos = texture2D(texture10, uv).xyz;\n  } else if(index < 11.5) {\n    pos = texture2D(texture11, uv).xyz;\n  } else if(index < 12.5) {\n    pos = texture2D(texture12, uv).xyz;\n  } else if(index < 13.5) {\n    pos = texture2D(texture13, uv).xyz;\n  } else {\n    pos = texture2D(texture14, uv).xyz;\n  }\n\n  return pos;\n}\n\nvec3 getDir(float index, vec2 uv) {\n    vec3 dir = vec3(1.0, 0.0, 0.0);\n    if(index < 13.5) {\n        dir = getPos(index + 1.0, uv) - getPos(index, uv);\n    } else {\n        dir = getPos(index, uv) - getPos(index - 1.0, uv);\n    }\n    return normalize(dir);\n}\n\n${rotate}\n${align}\n\nvoid main(void) {\n\n    float offset = uOffset * 2.0 - aPosOffset.w;\n    offset = clamp(offset, 0.0, 1.0);\n\n    float t = aTextureCoord.x / uNumSets;\n    float debug = 1.0 - (t + uSetPercent);\n    float radiusScale = smoothstep(0.0, 0.5, debug);\n    float openingScale = smoothstep(offset, offset + 0.1, debug);\n    vDebug = debug;\n\n    vec3 pos = vec3(0.0, uRadius * radiusScale * openingScale, 0.0);\n    float a = aTextureCoord.y * PI * 2.0;\n    pos.yz = rotate(pos.yz, -a);\n\n    vec3 dir = getDir(aVertexPosition.x, aPosOffset.xy);\n    pos = align(pos, dir);\n\n    vec3 posOffset = getPos(aVertexPosition.x, aPosOffset.xy);\n    pos += posOffset;\n\n    vec4 wsPos = uModelMatrix * vec4(pos, 1.0);\n\n    gl_Position = uProjectionMatrix * uViewMatrix * wsPos;\n    vTextureCoord = aTextureCoord;\n\n    vec3 n = vec3(0.0, 1.0, 0.0);\n    n.yz = rotate(n.yz, -a);\n    vNormal = n;\n    vNormalOrg = aNormal;\n    vExtra = aPosOffset;\n    vPosition = wsPos.xyz;\n}\n`;\n","export default `\nvec2 rotate(vec2 v, float a) {\n\tfloat s = sin(a);\n\tfloat c = cos(a);\n\tmat2 m = mat2(c, -s, s, c);\n\treturn m * v;\n}\n\nmat4 rotationMatrix(vec3 axis, float angle) {\n    axis = normalize(axis);\n    float s = sin(angle);\n    float c = cos(angle);\n    float oc = 1.0 - c;\n    \n    return mat4(oc * axis.x * axis.x + c,           oc * axis.x * axis.y - axis.z * s,  oc * axis.z * axis.x + axis.y * s,  0.0,\n                oc * axis.x * axis.y + axis.z * s,  oc * axis.y * axis.y + c,           oc * axis.y * axis.z - axis.x * s,  0.0,\n                oc * axis.z * axis.x - axis.y * s,  oc * axis.y * axis.z + axis.x * s,  oc * axis.z * axis.z + c,           0.0,\n                0.0,                                0.0,                                0.0,                                1.0);\n}\n\nvec3 rotate(vec3 v, vec3 axis, float angle) {\n\tmat4 m = rotationMatrix(axis, angle);\n\treturn (m * vec4(v, 1.0)).xyz;\n}\n`;\n","export default `\n\nvec3 align(vec3 pos, vec3 dir) {\n    vec3 initDir = vec3(1.0, 0.0, 0.0);\n    vec3 axis = cross(dir, initDir);\n    float angle = acos(dot(dir, initDir));\n    return rotate(pos, axis, angle);\n}\n`;\n","import diffuse from \"./fragments/diffuse.glsl\";\n\nexport default `\n\n#define SHADER_NAME SIMPLE_TEXTURE\n\nprecision highp float;\nvarying vec3 vNormal;\nvarying vec4 vExtra;\nvarying vec3 vPosition;\nvarying float vDebug;\n\nuniform float uOffset;\nuniform sampler2D texture;\n\n#define LIGHT vec3(1.0)\n${diffuse}\n\n\n#define FOG_DENSITY 0.2\nfloat fogFactorExp2(const float dist, const float density) {\n\tconst float LOG2 = -1.442695;\n\tfloat d = density * dist;\n\treturn 1.0 - clamp(exp2(d * d * LOG2), 0.0, 1.0);\n}\n\nfloat map(float v, float a, float b, float c, float d) {\n    float p = (v - a ) / ( b - a);\n    p = clamp(p, 0.0, 1.0);\n    return c + p * ( d - c);\n}\n\nvoid main(void) {\n    float d = diffuse(vNormal, LIGHT, .35);\n\n    vec2 uv = vec2(vExtra.z, 0.5);\n    vec3 color = texture2D(texture, uv).rgb;\n\n    float r = 3.5;\n    float z = map(vPosition.z + 2.0, -r, r, 0.0, 1.0);\n    z = pow(z, 1.5);\n\n    float br = mix(0.7, 1.25, vExtra.w);\n    color *= d * z * br;\n\n    gl_FragColor = vec4(color, 1.0);\n}\n`;\n","export default `\nfloat diffuse(vec3 n, vec3 l) {\n  float d = dot(normalize(n), normalize(l));\n  return max(d, 0.0);\n}\n\nfloat diffuse(vec3 n, vec3 l, float t) {\n  float d = dot(normalize(n), normalize(l));\n  return mix(1.0, max(d, 0.0), t);\n}\n\n`;\n","import alfrid from \"alfrid\";\nimport Config from \"./Config.js\";\nimport vs from \"./shaders/trails.vert\";\nimport fs from \"./shaders/trails.frag\";\n\nclass DrawTrails extends alfrid.Draw {\n  constructor() {\n    super();\n\n    const positions = [];\n    const uvs = [];\n    const indices = [];\n    let count = 0;\n\n    const num = 14;\n    const numSides = 4;\n\n    for (let i = 0; i < num; i++) {\n      // console.log(i + 1);\n      for (let j = 0; j < numSides; j++) {\n        positions.push([i, j, 0]);\n        positions.push([i + 1, j, 0]);\n        positions.push([i + 1, j + 1, 0]);\n        positions.push([i, j + 1, 0]);\n\n        uvs.push([i / num, j / numSides]);\n        uvs.push([(i + 1) / num, j / numSides]);\n        uvs.push([(i + 1) / num, (j + 1) / numSides]);\n        uvs.push([i / num, (j + 1) / numSides]);\n\n        indices.push(count * 4 + 0);\n        indices.push(count * 4 + 1);\n        indices.push(count * 4 + 2);\n        indices.push(count * 4 + 0);\n        indices.push(count * 4 + 2);\n        indices.push(count * 4 + 3);\n\n        count++;\n      }\n    }\n\n    const mesh = new alfrid.Mesh();\n    mesh.bufferVertex(positions);\n    mesh.bufferTexCoord(uvs);\n    mesh.bufferIndex(indices);\n\n    // instancing\n    const { numParticles } = Config;\n    const posOffsets = [];\n    for (let i = 0; i < numParticles; i++) {\n      for (let j = 0; j < numParticles; j++) {\n        posOffsets.push([\n          i / numParticles,\n          j / numParticles,\n          Math.random(),\n          Math.random(),\n        ]);\n      }\n    }\n    mesh.bufferInstance(posOffsets, \"aPosOffset\");\n\n    this.setMesh(mesh).useProgram(vs, fs).uniform(\"uRadius\", \"float\", 0.01);\n  }\n}\n\nexport default DrawTrails;\n","import curlNoise from \"./fragments/curlNoise.glsl\";\n\nexport default `\n#extension GL_EXT_draw_buffers : require \n\nprecision highp float;\nvarying vec2 vTextureCoord;\nuniform sampler2D texturePos;\nuniform sampler2D textureVel;\nuniform sampler2D textureExtra;\nuniform float uSeed;\nuniform float uNoise;\nuniform vec3 uGrowDir;\n\n${curlNoise}\n\nvoid main(void) {\n    vec3 pos = texture2D(texturePos, vTextureCoord).xyz;\n    vec3 vel = texture2D(textureVel, vTextureCoord).xyz;\n    vec3 extra = texture2D(textureExtra, vTextureCoord).xyz;\n\n    vec3 offset = (extra - 0.5) * 0.01;\n    vec3 acc = uGrowDir;\n    vec3 noise = curlNoise(pos * 0.25 * uNoise + offset + uSeed);\n    acc += noise;\n\n    pos += acc * 0.075;\n    \n    gl_FragData[0] = vec4(pos, 1.0);\n\tgl_FragData[1] = vec4(vel, 1.0);\n\tgl_FragData[2] = vec4(extra, 1.0);\n}\n`;\n","export default `\n// curlNoise.glsl\n\nvec3 mod289(vec3 x) { return x - floor(x * (1.0 / 289.0)) * 289.0;  }\n\nvec4 mod289(vec4 x) { return x - floor(x * (1.0 / 289.0)) * 289.0;  }\n\n// snoise.glsl\nvec4 permute(vec4 x) {  return mod(((x*34.0)+1.0)*x, 289.0);    }\nvec4 taylorInvSqrt(vec4 r) {    return 1.79284291400159 - 0.85373472095314 * r; }\n\nfloat snoise(vec3 v){\n    const vec2  C = vec2(1.0/6.0, 1.0/3.0) ;\n    const vec4  D = vec4(0.0, 0.5, 1.0, 2.0);\n    \n    vec3 i  = floor(v + dot(v, C.yyy) );\n    vec3 x0 = v - i + dot(i, C.xxx) ;\n    \n    vec3 g = step(x0.yzx, x0.xyz);\n    vec3 l = 1.0 - g;\n    vec3 i1 = min( g.xyz, l.zxy );\n    vec3 i2 = max( g.xyz, l.zxy );\n    \n    vec3 x1 = x0 - i1 + 1.0 * C.xxx;\n    vec3 x2 = x0 - i2 + 2.0 * C.xxx;\n    vec3 x3 = x0 - 1. + 3.0 * C.xxx;\n    \n    i = mod(i, 289.0 );\n    vec4 p = permute( permute( permute( i.z + vec4(0.0, i1.z, i2.z, 1.0 )) + i.y + vec4(0.0, i1.y, i2.y, 1.0 )) + i.x + vec4(0.0, i1.x, i2.x, 1.0 ));\n    \n    float n_ = 1.0/7.0;\n    vec3  ns = n_ * D.wyz - D.xzx;\n    \n    vec4 j = p - 49.0 * floor(p * ns.z *ns.z);\n    \n    vec4 x_ = floor(j * ns.z);\n    vec4 y_ = floor(j - 7.0 * x_ );\n    \n    vec4 x = x_ *ns.x + ns.yyyy;\n    vec4 y = y_ *ns.x + ns.yyyy;\n    vec4 h = 1.0 - abs(x) - abs(y);\n    \n    vec4 b0 = vec4( x.xy, y.xy );\n    vec4 b1 = vec4( x.zw, y.zw );\n    \n    vec4 s0 = floor(b0)*2.0 + 1.0;\n    vec4 s1 = floor(b1)*2.0 + 1.0;\n    vec4 sh = -step(h, vec4(0.0));\n    \n    vec4 a0 = b0.xzyw + s0.xzyw*sh.xxyy ;\n    vec4 a1 = b1.xzyw + s1.xzyw*sh.zzww ;\n    \n    vec3 p0 = vec3(a0.xy,h.x);\n    vec3 p1 = vec3(a0.zw,h.y);\n    vec3 p2 = vec3(a1.xy,h.z);\n    vec3 p3 = vec3(a1.zw,h.w);\n    \n    vec4 norm = taylorInvSqrt(vec4(dot(p0,p0), dot(p1,p1), dot(p2, p2), dot(p3,p3)));\n    p0 *= norm.x;\n    p1 *= norm.y;\n    p2 *= norm.z;\n    p3 *= norm.w;\n    \n    vec4 m = max(0.6 - vec4(dot(x0,x0), dot(x1,x1), dot(x2,x2), dot(x3,x3)), 0.0);\n    m = m * m;\n    return 42.0 * dot( m*m, vec4( dot(p0,x0), dot(p1,x1), dot(p2,x2), dot(p3,x3) ) );\n}\n\nfloat snoise(float x, float y, float z){\n    return snoise(vec3(x, y, z));\n}\n\nvec3 snoiseVec3( vec3 x ){\n\n\tfloat s  = snoise(vec3( x ));\n\tfloat s1 = snoise(vec3( x.y - 19.1 , x.z + 33.4 , x.x + 47.2 ));\n\tfloat s2 = snoise(vec3( x.z + 74.2 , x.x - 124.5 , x.y + 99.4 ));\n\tvec3 c = vec3( s , s1 , s2 );\n\treturn c;\n\n}\n\n\nvec3 curlNoise( vec3 p ){\n\t\n\tconst float e = .1;\n\tvec3 dx = vec3( e   , 0.0 , 0.0 );\n\tvec3 dy = vec3( 0.0 , e   , 0.0 );\n\tvec3 dz = vec3( 0.0 , 0.0 , e   );\n\n\tvec3 p_x0 = snoiseVec3( p - dx );\n\tvec3 p_x1 = snoiseVec3( p + dx );\n\tvec3 p_y0 = snoiseVec3( p - dy );\n\tvec3 p_y1 = snoiseVec3( p + dy );\n\tvec3 p_z0 = snoiseVec3( p - dz );\n\tvec3 p_z1 = snoiseVec3( p + dz );\n\n\tfloat x = p_y1.z - p_y0.z - p_z1.y + p_z0.y;\n\tfloat y = p_z1.x - p_z0.x - p_x1.z + p_x0.z;\n\tfloat z = p_x1.y - p_x0.y - p_y1.x + p_y0.x;\n\n\tconst float divisor = 1.0 / ( 2.0 * e );\n\treturn normalize( vec3( x , y , z ) * divisor );\n\n}\n\n`;\n","import alfrid, { GL } from \"alfrid\";\nimport { mat4 } from \"gl-matrix\";\nimport Settings from \"./Settings\";\nimport Config from \"./Config\";\nimport Assets from \"./Assets\";\nimport preload from \"./preload\";\n\n// draws\nimport DrawSave from \"./DrawSave\";\nimport DrawTrails from \"./DrawTrails\";\nimport fsSim from \"./shaders/sim.frag\";\n\nconst NUM_SETS = 10;\nconst TOTAL_FRAMES = 15 * NUM_SETS;\n\nclass Scene {\n  constructor() {\n    this.canvas = document.createElement(\"canvas\");\n    GL.init(this.canvas, { alpha: false });\n    GL.enableAlphaBlending();\n    GL.enable(GL.DEPTH_TEST);\n\n    // camera\n    this.camera = new alfrid.CameraPerspective();\n    this.camera.setPerspective((45 * Math.PI) / 180, GL.aspectRatio, 1, 30);\n    this.orbitalControl = new alfrid.OrbitalControl(this.camera, window, 15);\n    this.orbitalControl.rx.value = 0.3;\n    this.orbitalControl.radius.value = 15;\n    this.orbitalControl.radius.limit(10, 15);\n    this.orbitalControl.lockRotation(true);\n\n    this.control = new alfrid.OrbitalControl(null, window, 0.01);\n    this.control.lockZoom(true);\n\n    // states\n    this._index = 0;\n    this._nextIndex = 0;\n\n    this.mtx = mat4.create();\n    this.mtxTranslate = mat4.create();\n    mat4.translate(this.mtxTranslate, this.mtxTranslate, [-4, -2.5, 0]);\n\n    this._offset = new alfrid.TweenNumber(1, \"linear\", 0.005);\n    // this._offset = new alfrid.EaseNumber(1, 0.005);\n\n    preload().then(\n      () => this._init(),\n      (e) => {\n        console.log(\"Error\", e);\n      }\n    );\n  }\n\n  _init() {\n    this._initTextures();\n    this._initViews();\n\n    alfrid.Scheduler.addEF(() => this.render());\n  }\n\n  // public methods\n  show(mIndex) {\n    console.log(\"show\", mIndex);\n    if (this._index > 0) {\n      this.close();\n    }\n    this._nextIndex = mIndex;\n  }\n\n  goto(mIndex) {\n    if (mIndex < 1) {\n      return;\n    }\n    // const mSettings = Assets.get(`0${mIndex}`);\n    // for (let s in mSettings) {\n    //   if (s.indexOf(\"num\") === -1) {\n    //     Config[s] = mSettings[s];\n    //   }\n    // }\n    // Settings.refresh();\n    const oSetting = Settings[mIndex - 1];\n    console.log(\"goto\", mIndex);\n    console.log(\"using texture\", `Project_0${mIndex}`);\n    this._texture = Assets.get(`Project_0${mIndex}`);\n\n    this.regenerate(oSetting);\n    this.open();\n    this._index = this._nextIndex;\n  }\n\n  open() {\n    this.control.rx.setTo(0);\n    this.control.ry.setTo(0);\n    this._offset.speed = 0.005;\n    this._offset.value = 0;\n  }\n\n  close() {\n    this._offset.speed = 0.01;\n    this._offset.value = 1;\n  }\n\n  _initTextures() {\n    const { numParticles: num } = Config;\n\n    const oSettings = {\n      type: GL.FLOAT,\n      minFilter: GL.NEAREST,\n      magFilter: GL.NEAREST,\n    };\n    // init fboArray\n    this._fbo = new alfrid.FboArray(TOTAL_FRAMES, num, num, oSettings, 3);\n  }\n\n  // init draw calls\n  _initViews() {\n    this._bAxis = new alfrid.BatchAxis();\n    this._bCopy = new alfrid.BatchCopy();\n\n    // draw save\n    this._drawSave = new DrawSave()\n      .bindFrameBuffer(this._fbo.read)\n      .setClearColor(0, 0, 0, 1)\n      .draw();\n\n    // draw sim\n    this._drawSim = new alfrid.Draw()\n      .setMesh(alfrid.Geom.bigTriangle())\n      .useProgram(alfrid.ShaderLibs.bigTriangleVert, fsSim)\n      .setClearColor(0, 0, 0, 0);\n\n    // draw trails\n    this._drawTrails = new DrawTrails();\n    this._drawTrails.uniform(\"uNumSets\", \"float\", NUM_SETS);\n  }\n\n  regenerate(mSettings) {\n    this._drawSave\n      .bindFrameBuffer(this._fbo.read)\n      .setClearColor(0, 0, 0, 1)\n      .draw();\n\n    const { dirX, dirY, dirZ, noise, seed } = mSettings;\n    console.log(\"regenerate\", mSettings);\n    this._drawSim\n      .uniform(\"uNoise\", \"float\", noise)\n      .uniform(\"uGrowDir\", \"vec3\", [dirX, dirY, dirZ])\n      .uniform(\"uSeed\", \"float\", seed);\n    let i = TOTAL_FRAMES;\n    while (i--) {\n      this.updatePos();\n    }\n\n    this._offset.setTo(1);\n    this._offset.value = 0;\n  }\n\n  updatePos() {\n    this._drawSim\n      .bindFrameBuffer(this._fbo.write)\n      .uniformTexture(\"texturePos\", this._fbo.read.getTexture(0), 0)\n      .uniformTexture(\"textureVel\", this._fbo.read.getTexture(1), 1)\n      .uniformTexture(\"textureExtra\", this._fbo.read.getTexture(2), 2)\n      .draw();\n\n    this._fbo.swap();\n  }\n\n  update() {\n    if (this._nextIndex !== this._index && this._offset.value >= 1.0) {\n      this.goto(this._nextIndex);\n    }\n    mat4.lookAt(this.mtx, this.control.position, [0, 0, 0], [0, 1, 0]);\n    mat4.mul(this.mtx, this.mtxTranslate, this.mtx);\n  }\n\n  render() {\n    this.update();\n    GL.viewport(0, 0, GL.width, GL.height);\n    GL.clear(0, 0, 0, 1);\n    GL.setMatrices(this.camera);\n    GL.rotate(this.mtx);\n\n    if (this._index === 0) {\n      return;\n    }\n\n    this._drawTrails\n      .uniform(\"uOffset\", \"float\", this._offset.value)\n      .uniformTexture(\"texture\", this._texture, 15);\n    for (let j = 0; j < NUM_SETS; j++) {\n      this._drawTrails.uniform(\"uSetPercent\", \"float\", j / NUM_SETS);\n\n      for (let i = 0; i < 15; i++) {\n        const t = this._fbo.all[i + j * 15 - j].getTexture(0);\n        this._drawTrails.uniformTexture(`texture${i}`, t, i);\n      }\n      this._drawTrails.draw();\n    }\n\n    // const s = 200;\n    // GL.viewport(0, 0, s, s);\n    // this._bCopy.draw(this._texture);\n  }\n\n  resize(w, h) {\n    GL.setSize(w, h);\n    this.camera.setAspectRatio(GL.aspectRatio);\n  }\n}\n\nexport default Scene;\n","import React, { Component } from \"react\";\nimport Scene from \"./Scene\";\nimport \"./style.css\";\n\nclass WebGL extends Component {\n  constructor(props) {\n    super(props);\n\n    this.ref = React.createRef();\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (this.props.currentPage !== nextProps.currentPage) {\n      this.scene.show(nextProps.currentPage);\n    }\n    return false;\n  }\n\n  componentDidMount() {\n    const { ref } = this;\n    this.scene = new Scene();\n    ref.current.appendChild(this.scene.canvas);\n\n    window.addEventListener(\"resize\", () => this.resize());\n  }\n\n  resize() {\n    this.scene.resize(window.innerWidth, window.innerHeight);\n  }\n\n  render() {\n    return <div className=\"webgl-container\" ref={this.ref}></div>;\n  }\n}\n\nexport default WebGL;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport \"./main.scss\";\n\n// data\nimport ProjectPagesData from \"./data/projectData.json\";\n\n// components\nimport Landing from \"./components/Landing\";\nimport ProjectPage from \"./components/ProjectPage\";\nimport TextButton from \"./components/TextButton\";\nimport Team from \"./components/Team\";\nimport WebGL from \"./components/WebGL\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      currentPage: 0,\n      showTeamPage: false,\n    };\n\n    window.addEventListener(\"keydown\", (e) => {\n      if (e.keyCode === 32) {\n        const { currentPage } = this.state;\n        const nextPage = currentPage === 6 ? 0 : currentPage + 1;\n        this.setState({ currentPage: nextPage });\n      }\n    });\n  }\n\n  prev() {\n    const { currentPage } = this.state;\n    this.setState({ currentPage: currentPage === 0 ? 6 : currentPage - 1 });\n  }\n\n  next() {\n    const { currentPage } = this.state;\n    this.setState({ currentPage: currentPage === 6 ? 0 : currentPage + 1 });\n  }\n\n  toggleTeam() {\n    this.setState({ showTeamPage: !this.state.showTeamPage });\n  }\n\n  render() {\n    const { currentPage, showTeamPage } = this.state;\n    console.log(\"currentPage\", currentPage);\n\n    return (\n      <div className=\"App\">\n        <div className=\"arrow-left arrow-button\" onClick={() => this.prev()} />\n        <div className=\"arrow-right arrow-button\" onClick={() => this.next()} />\n\n        <div className=\"footer\">\n          <TextButton\n            text={\"Team\"}\n            visible={true}\n            onClick={() => this.toggleTeam()}\n          />\n          <TextButton\n            text={\"Main\"}\n            visible={currentPage !== 0}\n            onClick={() => {\n              this.setState({ currentPage: 0, showTeamPage: false });\n            }}\n          />\n        </div>\n\n        <Team display={showTeamPage} />\n        <Landing currentPage={currentPage} />\n\n        <div className=\"ProjectsWrapper\">\n          {ProjectPagesData.map(({ id, name, desc }, i) => (\n            <ProjectPage\n              key={i}\n              id={id}\n              name={name}\n              desc={desc}\n              selected={currentPage === i + 1}\n            />\n          ))}\n        </div>\n        <WebGL currentPage={currentPage} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  // <React.StrictMode>\n  <App />,\n  // </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}